name: Build project

on:
  pull_request:
    branches: [master]
    paths:
      - "Assets/**"
      - "Packages/**"
      - "ProjectSettings/**"
      - "react/**"
  push:
    branches:
      - master
    paths:
      - "Assets/**"
      - "Packages/**"
      - "ProjectSettings/**"
      - "react/**"
  workflow_dispatch:

jobs:
  buildReact:
    name: Build React UI
    runs-on: ubuntu-latest
    steps:
      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
          restore-keys: |
            ${{ runner.os }}-lfs-

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "react/.nvmrc"
          cache: npm
          cache-dependency-path: react/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./react

      - name: Build
        run: npm run build
        working-directory: ./react
        env:
          BUILD_PATH: ./build

      - uses: actions/upload-artifact@v4
        with:
          name: Build-React
          path: react/build
          retention-days: 14

  test:
    permissions:
      contents: write
      checks: write
    name: Test project ðŸ§ª
    needs: buildReact
    runs-on: ubuntu-latest
    steps:
      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
          restore-keys: |
            ${{ runner.os }}-lfs-

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Cache
      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-Test-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-Test-
            Library-

      # Check formating
      - run: dotnet tool restore
      - run: dotnet csharpier --check .

      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  buildForWebGL:
    name: Build For WebGL Platform
    needs: buildReact
    runs-on: ubuntu-latest
    steps:
      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
          restore-keys: |
            ${{ runner.os }}-lfs-

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Cache
      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-Web-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-Web-
            Library-

      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
      - name: Download React UI Build Output
        uses: actions/download-artifact@v4
        with:
          name: Build-React
          path: Assets/Resources/react
      - name: Build WebGL
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
      - uses: actions/upload-artifact@v4
        with:
          name: Build-WebGL
          path: build/WebGL
          retention-days: 14

  buildForAndroidPlatform:
    name: Build For Android Platform
    needs: buildReact
    runs-on: ubuntu-latest
    steps:
      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
          restore-keys: |
            ${{ runner.os }}-lfs-

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Cache
      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-Android-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-Android-
            Library-

      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
      - name: Download React UI Build Output
        uses: actions/download-artifact@v4
        with:
          name: Build-React
          path: Assets/Resources/react
      - name: Build Android APK
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          versioning: None
          targetPlatform: Android
          androidKeystoreName: user # This file won't exist, but this property needs to exist.
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}
      - uses: actions/upload-artifact@v4
        with:
          name: Build-Android
          path: build/Android
          retention-days: 14

  buildForWindowsPlatform:
    if: false
    name: Build For Windows Platform
    needs: buildReact
    runs-on: windows-2022
    steps:
      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
          restore-keys: |
            ${{ runner.os }}-lfs-

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Cache
      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-Win-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-Win-
            Library-

      - name: Download React UI Build Output
        uses: actions/download-artifact@v4
        with:
          name: Build-React
          path: Assets/Resources/react
      - name: Build Windows
        id: build
        continue-on-error: true
        timeout-minutes: 45
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          versioning: None
          targetPlatform: StandaloneWindows64
      - name: Sleep for Retry
        if: ${{ steps.build.outcome == 'failure' }}
        run: Start-Sleep -s 120
      - name: Build Retry
        id: build-2
        timeout-minutes: 45
        if: steps.build.outcome == 'failure'
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          versioning: None
          targetPlatform: StandaloneWindows64
      - name: Remove DoNotShip Folders
        run: |
          Get-ChildItem -Path build/StandaloneWindows64 -Recurse -Directory -Include *DoNotShip, *ButDontShipItWithYourGame | Remove-Item -Recurse -Force
      - uses: actions/upload-artifact@v4
        with:
          name: Build-Windows-64bit
          path: build/StandaloneWindows64
          retention-days: 14

  uploadWebGL:
    name: Upload WebGL to Supabase Storage
    needs: buildForWebGL
    runs-on: ubuntu-latest
    env:
      TARGET_DIR: ${{ secrets.WEBGL_OUTPUT_PATH }}/master # Default value

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Build-WebGL
          path: build

      - name: Set Target Directory (if PR)
        if: github.event_name == 'pull_request' && github.ref_name != 'master'
        run: echo "TARGET_DIR=${{ secrets.WEBGL_OUTPUT_PATH }}/pr-${{ github.head_ref }}" >> $GITHUB_ENV

      - name: Upload to Supabase Storage
        uses: xiaohai-huang/upload-things-to-supabase-storage@v0
        with:
          SUPABASE_PUBLIC_URL: ${{ secrets.SUPABASE_PUBLIC_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          BUCKET: ${{ secrets.BUCKET }}
          SOURCE_DIR: build/WebGL
          TARGET_DIR: ${{ env.TARGET_DIR }}
